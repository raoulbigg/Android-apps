{"version":3,"sources":["../../../src/@ionic-native/plugins/file-path/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAIxE;;;;;;;;;;;;;;;;;;;GAmBG;AASH,IAAa,QAAQ;IAAS,4BAAiB;IAA/C;;IAgBA,CAAC;IAdC;;;;OAIG;IAEH,oCAAiB,GAAjB,UAAkB,IAAY,IAAqB,MAAM,CAAC,CAAC,CAAC;IAQ9D,eAAC;AAAD,CAhBA,AAgBC,CAhB6B,iBAAiB,GAgB9C;AANM,mBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,uBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAPA;IADC,OAAO,EAAE;;;;iDACkD;AARjD,QAAQ;IARpB,MAAM,CAAC;QACN,UAAU,EAAE,UAAU;QACtB,MAAM,EAAE,yBAAyB;QACjC,SAAS,EAAE,iBAAiB;QAC5B,IAAI,EAAE,sDAAsD;QAC5D,SAAS,EAAE,CAAC,SAAS,CAAC;KACvB,CAAC;GAEW,QAAQ,CAgBpB;SAhBY,QAAQ","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n\r\ndeclare const window: any;\r\n\r\n/**\r\n * @name File Path\r\n * @description\r\n *\r\n * This plugin allows you to resolve the native filesystem path for Android content URIs and is based on code in the aFileChooser library.\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { FilePath } from '@ionic-native/file-path';\r\n *\r\n * constructor(private filePath: FilePath) { }\r\n *\r\n * ...\r\n *\r\n * this.filePath.resolveNativePath(path)\r\n *   .then(filePath => console.log(filePath))\r\n *   .catch(err => console.log(err));\r\n *\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'FilePath',\r\n  plugin: 'cordova-plugin-filepath',\r\n  pluginRef: 'window.FilePath',\r\n  repo: 'https://github.com/hiddentao/cordova-plugin-filepath',\r\n  platforms: ['Android']\r\n})\r\n\r\nexport class FilePath extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Resolve native path for given content URL/path.\r\n   * @param {String} path  Content URL/path.\r\n   * @returns {Promise<string>}\r\n   */\r\n  @Cordova()\r\n  resolveNativePath(path: string): Promise<string> { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}